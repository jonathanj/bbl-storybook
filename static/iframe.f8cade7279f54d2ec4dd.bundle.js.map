{"version":3,"file":"static/iframe.f8cade7279f54d2ec4dd.bundle.js","sources":["webpack:///./src/components/Table/index.js"],"sourcesContent":["import React from 'react'\nimport T from 'proptypes'\nimport {\n  compose,\n  defaultProps,\n  setDisplayName,\n  setPropTypes,\n} from 'recompose'\nimport styled from 'react-emotion'\nimport {List} from 'immutable'\n\n\nconst Container = styled('div')`\n  & > table {\n    width: 100%;\n  }\n`\n\n\nconst columnHeader = column => (\n  <th key={column.hashCode()}>{column.get('title')}</th>\n)\n\n\nconst getIn = path => parent =>\n  parent.getIn(List.isList(path) ? path : List.of(path))\n\n\nconst rowCellFactory = row => column => {\n  const render = column.get('render', x => x)\n  const accessor = typeof column.get('accessor') === 'function'\n                 ? column.get('accessor')\n                 : getIn(column.get('accessor'))\n  const key = `${column.hashCode()}:${row.hashCode()}`\n  return (<td key={key}>{render(accessor(row), row, column)}</td>)\n}\n\n\nconst rowFactory = (columns, onRowClicked) => row => (\n  <tr\n    key={row.hashCode()}\n    onClick={onRowClicked}>\n    {columns.map(rowCellFactory(row))}\n  </tr>\n)\n\n\nexport const Table = compose(\n  setDisplayName('BrownBagLunch.Table'),\n  setPropTypes({\n    //data: IT.listOf(...),\n    //columns: IT.listOf(...),\n    onRowClicked: T.func,\n  }),\n  defaultProps({\n    onRowClicked: undefined,\n  }),\n)(({data, columns, onRowClicked}) => (\n  <Container>\n    <table>\n      <thead>\n        <tr>\n          {columns.map(columnHeader)}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map(rowFactory(columns, onRowClicked))}\n      </tbody>\n    </table>\n  </Container>\n))\n\n\nexport default Table\n"],"mappings":"AAYA","sourceRoot":""}